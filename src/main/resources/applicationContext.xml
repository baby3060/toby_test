<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
                           http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-4.0.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">

    <bean id="xmlParsing" class="com.tobexam.common.XMLParsingConfig">
        <property name="fileName" value="mysql_conn.xml" />
    </bean>

    <bean id="connBean" class="com.tobexam.common.ConnectionBean"
        factory-bean="xmlParsing" factory-method="setConfig" />
    
    <bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
        <property name="driverClass" value="#{connBean.getClassName()}" />
        <property name="url" value="#{connBean.getConnStr()}" />
        <property name="username" value="#{connBean.getUserName()}" />
        <property name="password" value="#{connBean.getUserPass()}" />
    </bean>

    <bean id="jdbcContext" class="com.tobexam.dao.JdbcContext">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <bean id="userDao" class="com.tobexam.dao.UserDaoJdbc_Template">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- DataSource가 아닌 JTA(글로벌 트랜잭션)을 사용할 경우  
        org.springframework.jdbc.datasource.DataSourceTransactionManager를 org.springframework.transaction.jta.JtaTransactionManager로 수정한다.
    -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <!--
        <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
     -->
    <bean id="mailSender" class="com.tobexam.service.DummyMailSender">
        <property name="host" value="mail.server.com" />
    </bean>

    <bean id="userService" class="com.tobexam.service.UserServiceImpl">
        <property name="userDao" ref="userDao" />
        <property name="mailSender" ref="mailSender" />
    </bean>

    <aop:config>
        <!-- 포인트컷 외장 어드바이저 -->
        <!-- 
        <aop:pointcut id="transactionPointcut" 
                    expression="execution(* *..*ServiceImpl.upgrade*(..))" />
        <aop:advisor advice-ref="transactionAdvice" pointcut-ref="transactionPointcut" />
        -->
        <!-- 포인트컷 내장 어드바이저 -->
        <aop:advisor advice-ref="transactionAdvice"  pointcut="execution(* *..*ServiceImpl.upgrade*(..))" />
    </aop:config>

    <bean id="transactionAdvice" class="com.tobexam.service.TransactionAdvice">
        <property name="transactionManager" ref="transactionManager" />
    </bean>
    
    <!-- AOP 네임스페이스 사용 안 할 시 -->
    <!-- 
    
    <bean id="transactionPointcut" class="org.springframework.aop.aspectj.AspectJExpressionPointcut">
        <property name="expression" value="execution(* *..*ServiceImpl.upgrade*(..))" />
    </bean>

    <bean id="transactionAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
        <property name="advice" ref="transactionAdvice" />
        <property name="pointcut" ref="transactionPointcut" />
    </bean>
    -->
    
    <bean id="testUserService"
        class="com.tobexam.UserServiceTest$TestUserServiceImpl"
        parent="userService"
    />

    <!-- DefaultAdvisorAutoProxyCreator는 Bean으로만 등록하면 되므로, id는 필요 없음 -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />
</beans>